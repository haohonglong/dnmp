version: "3"
services:
  nginx:
    build:
      context: ./services/nginx
      args:
        NGINX_VERSION: nginx:${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: nginx
    hostname: nginx
    working_dir: /etc/nginx/conf.d
    extra_hosts:
      - "lam2.core:$HOST_IP"
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
      HOSTIP: $HOST_IP
    restart: always
    networks:
      - default

  composer:
    image: composer/composer
    container_name: composer
    hostname: composer
    volumes:
      - ${SOURCE_DIR}:/app/:rw
    working_dir: /app
    command: ["top"]
    networks:
      - default
    
  php56:
    image: lam/php56
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP56_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP56_EXTENSIONS}
        TZ: "$TZ"
    container_name: php56
    hostname: php56
    extra_hosts:
      - "blog.admin:$HOST_IP"
    depends_on:
      - "mysql"
      - "redis"
    expose:
      - 9501
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP_LOG_DIR}:/var/log/php
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default
  


  php:
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:7.1-fpm-alpine3.9
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        TZ: "$TZ"
    container_name: php
    hostname: php
    extra_hosts:
      - "yaf.local:$HOST_IP"
      - "blog.admin:$HOST_IP"
    depends_on:
      - "mysql"
      - "redis"
    expose:
      - 9501
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP_LOG_DIR}:/var/log/php
    restart: always
    environment:
      - TZ=$TZ
      - HOSTIP=$HOST_IP
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  mysql:
    image: mysql:${MYSQL5_VERSION}
    container_name: mysql
    hostname: mysql
    ports:
      - "3306:3306"
    volumes:
      - ${MYSQL5_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL5_ROOT_PASSWORD}"
      TZ: "$TZ"
      HOSTIP: $HOST_IP

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    hostname: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
      HOSTIP: $HOST_IP
    networks:
      - default

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    hostname: phpmyadmin
    ports:
      - "81:80"
    networks:
      - default
    depends_on:
      - "mysql"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - TZ=Asia/Shanghai
      - HOSTIP=$HOST_IP

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin:latest
    container_name: phpredisadmin
    hostname: phpredisadmin
    ports:
      - "8086:80"
    networks:
     - default
    environment:
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
      - TZ=$TZ
      - HOSTIP=$HOST_IP

  mongodb:
    image: mongo:${MONGODB_VERSION}
    container_name: mongodb
    hostname: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "root1234"
      TZ: "$TZ"
      HOSTIP: $HOST_IP
    volumes:
      - ${DATA_DIR}/mongo:/data/db:rw
      - ${DATA_DIR}/mongo_key:/mongo:rw
    ports:
      - "${MONGODB_HOST_PORT}:27017"
    networks:
      - default
    command:
      --auth

  adminmongo:
    image: mrvautin/adminmongo
    container_name: adminmongo
    hostname: adminmongo
    ports:
      - "${ADMINMONGO_HOST_PORT}:1234"
    environment:
      - HOST=0.0.0.0
      - DB_HOST=mongodb
      - DB_PORT=27017
      - HOSTIP=$HOST_IP
    networks:
      - default

  gcc:
    image: gcc:4.9
    container_name: gcc
    hostname: gcc
    environment:
      TZ: "$TZ"
      HOSTIP: $HOST_IP
    restart: always
    command: ["bash"]
    tty: true
    working_dir: /app
    networks:
      - default

  rust:
    image: haohonglong/nvm:version1.0
    container_name: rust
    hostname: rust
    environment:
      TZ: "$TZ"
      HOSTIP: $HOST_IP
    ports:
      - 7878:7878
    volumes:
      - /www/lamborghiniJS/LAM2-demos:/www/:rw
    working_dir: /www/tools/build
    stdin_open: true
    tty: true
    networks:
      - default

  golang:
    image: haohonglong/nvm:version1.0
    container_name: golang
    hostname: golang
    environment:
      TZ: "$TZ"
      HOSTIP: $HOST_IP
    ports:
      - 8090:8090
    volumes:
      - /www/lamborghiniJS/LAM2-demos:/www/:rw
    working_dir: /www/tools/build
    stdin_open: true
    tty: true
    networks:
      - default



networks:
  default:
    driver: bridge

